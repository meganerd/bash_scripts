[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jenkins-stats"
version = "1.0.0"
description = "Export Jenkins jobs and analyze build statistics by parameter values"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jenkins Stats Team", email = "jenkins-stats@example.com"}
]
keywords = ["jenkins", "statistics", "ci", "analysis", "build"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "types-requests",
]

[project.urls]
Homepage = "https://github.com/jenkins-stats/jenkins-stats"
Repository = "https://github.com/jenkins-stats/jenkins-stats.git"
Documentation = "https://github.com/jenkins-stats/jenkins-stats#readme"
"Bug Tracker" = "https://github.com/jenkins-stats/jenkins-stats/issues"

[project.scripts]
jenkins-stats = "jenkins_stats.exporter:main"
jenkins-export = "jenkins_stats.cli:main"

[tool.setuptools.packages.find]
include = ["jenkins_stats*"]

[tool.setuptools.package-data]
jenkins_stats = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
